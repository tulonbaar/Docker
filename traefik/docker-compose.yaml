version: '3.7'

services:
  traefik:
    # The latest official supported Traefik docker image
    image: traefik/traefik:experimental-v3.2
    # Enables the Traefik Dashboard and tells Traefik to listen to docker
    # --providers tell Traefik to connect to the Docker provider
    # enable --log.level=INFO so we can see what Traefik is doing in the log files
    command: --api.insecure=false --providers.docker --log.level=INFO
    ports:
      # Exposes port 80 for incoming web requests
      - "80:80"
      # The Web UI port http://0.0.0.0:8080 (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik_network
    secrets:
      - traefik_users  # Reference the secret here
    labels:
      - "traefik.http.routers.api.rule=Host(`traefik.docker.localhost`)
        traefik.http.routers.api.middlewares=auth"
      - "traefik.http.middlewares.auth.basicAuth.usersFile=/run/secrets/traefik_users"  # Use the secret file

  whoami:
     # A container that exposes an API to show its IP address
     image: traefik/whoami
     # We set a label to tell Traefik to assign a hostname to the new service
     labels:
       - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
     networks:
       - traefik_network

networks:
  traefik_network:
    external: true

secrets:
  traefik_users:
    external: true  # Indicate that this secret is managed outside the compose file